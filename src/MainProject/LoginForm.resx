<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABRAGADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAopCwXqQPrUZuIgfvilcCWioTcxYJ31zPiDxdHpqtFb
        qHn6AsCVB9MDlj7D8SKTkgN7UNUttOiDzSAbjhVHJY+gHUmsF/E8cqOy+a5XgQwYZvxb7o+mTXLW2l3m
        sTnUNZmkEbdI2blh6H0HsOPr1raDpEohtIlRBwMCps2MbZ6/qD3D/boprWI8xsieZj/e/wDrVsQ+IvJv
        ILe4mhkW4z5EsZ4cjqpHUGs+LT7qfnBqnqvh1phBK+UkilRlkXqDkVLi4q6Y9zvYpklXKn8KkrAmufsZ
        UhuQASPxrXtLlbmIMK0jK6uJqxYJAGTWFqviS109hEZAZW4VRyx/D+pql4x1+TTLVLW02m8uDtj3EYXj
        ljnsK82ku2TzNsjSM/8ArJXzuk56sMkce1VGLkzCtWVNeZ0eoeM713JtwkYPTd8zf4fzqnF4p1EHMk+7
        r/CP6Vz7Pv4pjyBEJJxjmupUIW1R5rxVVvRna2Pi9iQsqBzxkocHpk8HjA+taA1bS9RuYo9okkK7lfyz
        hfYnHB9jXm+naikBnWeES7vmT1X0/WrdpqM9vP8A2grFpYfmlDMP3sf8QJJ5OOmBWM6C3idlOu7pTPQ5
        raaWcKWyp6Vt2GjRxKGcZNZkcwngWWNgeAwI9DyDWpYaoJIiHBLL2FZXOw1AqRL0AA71g+Ite0/SrP7R
        eyBY1OUQfekYdABWV4h8Zi2YWmnQG9vnbaqLyin/ANmPsP0rG0/w5I13/a/iS4N3fHmOEkFIvw6E/p9a
        h+9oMlsGv72OfWNSBilu8CG37RRDkfiTzXV+H5GKEHoKxZHe7mCqDjPFdPpNmbeAZHJq0rIR5v4gu1u/
        EVzJMCyxQlQPMVTy7A4yD/dHSsbUr23e1t47eIqyAbyVHJx1ra8U2Mmna3M5ysMhZC+cDY53KScE4DFg
        ceorHgjtLSGQ6grM8iZiUDPHrjtntn6/XalZx8zz8Qpc/kZzXKhCMMrDjsf59Koz3XB4LN2J/wAKvxgX
        biEIAeTuz0A5yeOwHao7rTTZ3RSbrjoD+H9K6Fe9jCKS1Zn2O77Vvddyg8g9/at+Ke2JlYW5jBjOR5yg
        Yxz1X/CmW8FtcWgghhZbwfdweH68fXGMD2pj3ENrAckSRDDSkHh/SMgjrnuO2aJNJal6zmrHeeHp45LQ
        2u/L20MUcg9G28iq7Xl/fZtLMpHADmSUZAwem48fgq8n1Arm9E1KSOwlsYXZtUvJmknkA4iz1P4CunhJ
        W3jhRj5aDCr6VxSiekmWbS2tNKQmH97cMMNMwG4j0GOFHsKkihnvpeh5qxYaXJcsGYfLXT2llHbIAoGa
        Cinp+kpbqGYZatUAAYFLRQBg6/aQXDIJ4lkR1KkEdR3rhr3wtdQhhYYvrYkv5DMBKrYwOv3wOwyK9K1O
        0N3aFU/1i/Mv19K5ZZGEhV8gjgg9Qai7i7omUVJWZ5+9k1jcBmjvbZ0ZBiSBwf8AaOQMdfQnrTJmgmuC
        5W6kBkkHCNwv8ByR6n17V319Cb+JYnu7lFXpslIrnLrwbbXL5e8uCO+TnNaLESMHhoh4f8K3WuqWElva
        W+FEhWQSy5HcY4U/jXQ6p4U0u0S3RYxuhJZAW3MxPVj6n3rO0jSU0MMLO4uF3/e/eYz+VaDORliSWPcm
        n7Rt3NI04xWiMyHTrfSxK0YHmytl39c1ctVwUB6k1EwM0uT9wfrWjp1uZ7lcDjNJu5aR19goW1TAxxVq
        o4U8uJV9BUlIoKKKKACsfVtKW5zNGNsuOo71sUEZosBwMkc0DlXo83IxXY3Wmw3A5UZrIm8P8nYanlQG
        EXAFRt8x5raGgS5q1B4fAOXNNKwGFb2kk7AKprq9M04W0YZh81Wreyitx8qjNWaYBRRRQAUUUUAFFFFA
        BRRRQAlLRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABRAGADASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3+iiigAopCwXqQPrUZuIgfvilcCWioTcxYJ31zPiDxdHpqtFb
        qHn6AsCVB9MDlj7D8SKTkgN7UNUttOiDzSAbjhVHJY+gHUmsF/E8cqOy+a5XgQwYZvxb7o+mTXLW2l3m
        sTnUNZmkEbdI2blh6H0HsOPr1raDpEohtIlRBwMCps2MbZ6/qD3D/boprWI8xsieZj/e/wDrVsQ+IvJv
        ILe4mhkW4z5EsZ4cjqpHUGs+LT7qfnBqnqvh1phBK+UkilRlkXqDkVLi4q6Y9zvYpklXKn8KkrAmufsZ
        UhuQASPxrXtLlbmIMK0jK6uJqxYJAGTWFqviS109hEZAZW4VRyx/D+pql4x1+TTLVLW02m8uDtj3EYXj
        ljnsK82ku2TzNsjSM/8ArJXzuk56sMkce1VGLkzCtWVNeZ0eoeM713JtwkYPTd8zf4fzqnF4p1EHMk+7
        r/CP6Vz7Pv4pjyBEJJxjmupUIW1R5rxVVvRna2Pi9iQsqBzxkocHpk8HjA+taA1bS9RuYo9okkK7lfyz
        hfYnHB9jXm+naikBnWeES7vmT1X0/WrdpqM9vP8A2grFpYfmlDMP3sf8QJJ5OOmBWM6C3idlOu7pTPQ5
        raaWcKWyp6Vt2GjRxKGcZNZkcwngWWNgeAwI9DyDWpYaoJIiHBLL2FZXOw1AqRL0AA71g+Ite0/SrP7R
        eyBY1OUQfekYdABWV4h8Zi2YWmnQG9vnbaqLyin/ANmPsP0rG0/w5I13/a/iS4N3fHmOEkFIvw6E/p9a
        h+9oMlsGv72OfWNSBilu8CG37RRDkfiTzXV+H5GKEHoKxZHe7mCqDjPFdPpNmbeAZHJq0rIR5v4gu1u/
        EVzJMCyxQlQPMVTy7A4yD/dHSsbUr23e1t47eIqyAbyVHJx1ra8U2Mmna3M5ysMhZC+cDY53KScE4DFg
        ceorHgjtLSGQ6grM8iZiUDPHrjtntn6/XalZx8zz8Qpc/kZzXKhCMMrDjsf59Koz3XB4LN2J/wAKvxgX
        biEIAeTuz0A5yeOwHao7rTTZ3RSbrjoD+H9K6Fe9jCKS1Zn2O77Vvddyg8g9/at+Ke2JlYW5jBjOR5yg
        Yxz1X/CmW8FtcWgghhZbwfdweH68fXGMD2pj3ENrAckSRDDSkHh/SMgjrnuO2aJNJal6zmrHeeHp45LQ
        2u/L20MUcg9G28iq7Xl/fZtLMpHADmSUZAwem48fgq8n1Arm9E1KSOwlsYXZtUvJmknkA4iz1P4CunhJ
        W3jhRj5aDCr6VxSiekmWbS2tNKQmH97cMMNMwG4j0GOFHsKkihnvpeh5qxYaXJcsGYfLXT2llHbIAoGa
        Cinp+kpbqGYZatUAAYFLRQBg6/aQXDIJ4lkR1KkEdR3rhr3wtdQhhYYvrYkv5DMBKrYwOv3wOwyK9K1O
        0N3aFU/1i/Mv19K5ZZGEhV8gjgg9Qai7i7omUVJWZ5+9k1jcBmjvbZ0ZBiSBwf8AaOQMdfQnrTJmgmuC
        5W6kBkkHCNwv8ByR6n17V319Cb+JYnu7lFXpslIrnLrwbbXL5e8uCO+TnNaLESMHhoh4f8K3WuqWElva
        W+FEhWQSy5HcY4U/jXQ6p4U0u0S3RYxuhJZAW3MxPVj6n3rO0jSU0MMLO4uF3/e/eYz+VaDORliSWPcm
        n7Rt3NI04xWiMyHTrfSxK0YHmytl39c1ctVwUB6k1EwM0uT9wfrWjp1uZ7lcDjNJu5aR19goW1TAxxVq
        o4U8uJV9BUlIoKKKKACsfVtKW5zNGNsuOo71sUEZosBwMkc0DlXo83IxXY3Wmw3A5UZrIm8P8nYanlQG
        EXAFRt8x5raGgS5q1B4fAOXNNKwGFb2kk7AKprq9M04W0YZh81Wreyitx8qjNWaYBRRRQAUUUUAFFFFA
        BRRRQAlLRRQAUUUUAFFFFABRRRQB/9k=
</value>
  </data>
</root>